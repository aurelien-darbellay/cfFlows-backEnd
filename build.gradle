plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 's05t02'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

sourceSets {
    processor {
        java {
            srcDir 'src/processor/java'
        }
        resources {
            srcDir 'src/processor/resources'
        }
    }
}

dependencies {
    // Use compiled processor classes during main compilation
    annotationProcessor sourceSets.processor.output

    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.8.8'
    implementation 'jakarta.validation:jakarta.validation-api'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'com.cloudinary:cloudinary-http44:1.32.0'
    implementation 'com.openhtmltopdf:openhtmltopdf-pdfbox:1.0.10'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.register('compileProcessor', JavaCompile) {
    source = sourceSets.processor.java
    classpath = sourceSets.processor.compileClasspath
    destinationDirectory = file("$buildDir/classes/processor")
}

tasks.named('compileJava') {
    dependsOn tasks.named('compileProcessor')
}

tasks.named('processProcessorResources') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named('test') {
    useJUnitPlatform()
}




